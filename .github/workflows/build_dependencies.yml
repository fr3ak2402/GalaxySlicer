name: Build dependencies

on:
  pull_request:
    branches:
      - main
    paths:
      - 'deps/**'
  push:
    branches:
      - main
    paths:
      - 'deps/**'

jobs:
  build_deps:
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-2022
          - os: macos-13
            arch: x86_64
          - os: macos-13
            arch: arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup dev on Windows
        if: matrix.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build on Windows
        if: matrix.os == 'windows-2022'
        working-directory: ${{ github.workspace }}
        run: |
            choco install strawberryperl
            mkdir ${{ github.workspace }}/deps/build
            mkdir ${{ github.workspace }}/deps/build/GalaxySlicer_dep
            .\build_release_vs2022.bat deps
            
      - name: pack Windows dependencies
        if: matrix.os == 'windows-2022'
        working-directory: ${{ github.workspace }}/deps/build/GalaxySlicer_dep
        shell: cmd
        run: '"C:/Program Files/7-Zip/7z.exe" a -tzip GalaxySlicer_dep.zip ${{ github.workspace }}/deps/build'

      - name: Upload Windows dependencies
        if: matrix.os == 'windows-2022'
        uses: actions/upload-artifact@v3
        with:
          name: GalaxySlicer_dep
          path: ${{ github.workspace }}/deps/build/GalaxySlicer_dep.zip

      - name: Build on Mac x86_64
        if: matrix.os == 'macos-13' && matrix.arch == 'x86_64'
        working-directory: ${{ github.workspace }}
        run: |
            brew install cmake git gettext
            mkdir -p ${{ github.workspace }}/deps/build_x86_64
            mkdir -p ${{ github.workspace }}/deps/build_x86_64/GalaxySlicer_dep_x86_64
            ./build_release_macos.sh -d -a x86_64

      - name: Build on Mac arm64
        if: matrix.os == 'macos-13' && matrix.arch == 'arm64'
        working-directory: ${{ github.workspace }}
        run: |
            brew install cmake git gettext
            mkdir -p ${{ github.workspace }}/deps/build_arm64
            mkdir -p ${{ github.workspace }}/deps/build_arm64/GalaxySlicer_dep_arm64
            ./build_release_macos.sh -d -a arm64
